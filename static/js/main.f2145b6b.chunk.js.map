{"version":3,"sources":["Components/Cards/Cards.module.css","Components/Cards/Cards.jsx","api/index.js","Components/Chart/Chart.jsx","Components/CountryPicker/CountryPicker.jsx","App.js","index.js","Components/Chart/Chart.module.css","Components/CountryPicker/CountryPicker.module.css","App.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f2145b6b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2XqFC\",\"card\":\"Cards_card__1ak5A\",\"infected\":\"Cards_infected__bZ078\",\"recovered\":\"Cards_recovered__1wTBM\",\"deaths\":\"Cards_deaths__1YvrA\"};","import React from 'react';\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core'\nimport styles from './Cards.module.css';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\n\nconst Cards = ( { data: {confirmed, recovered, deaths, lastUpdate } }) => {\n  if (!confirmed) {\n    return 'Loading...'\n  }\n    return(\n      <div className= {styles.container}>\n          <Grid container spacing={3} justify=\"center\">\n            <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\n                <CardContent>\n                    <Typography color=\"textSecondary\" gutterBottom>\n                        Infected\n                    </Typography>\n                    <Typography variant=\"h5\"> \n                        <CountUp \n                        start={0}\n                        end={confirmed.value}\n                        duration={2.5}\n                        separator=\",\"\n                        />\n                    </Typography>\n                    <Typography color=\"textSecondary\">\n                        {new Date(lastUpdate).toDateString()}\n                    </Typography>\n                    <Typography variant=\"body2\">\n                        Number of active cases of Covid-19\n                    </Typography>\n                </CardContent>\n            </Grid>\n            <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\n                <CardContent>\n                    <Typography color=\"textSecondary\" gutterBottom>\n                        Recovered\n                    </Typography>\n                    <Typography variant=\"h5\"> \n                        <CountUp \n                        start={0}\n                        end={recovered.value}\n                        duration={2.5}\n                        separator=\",\"\n                        />\n                    </Typography>\n                    <Typography color=\"textSecondary\">\n                    {new Date(lastUpdate).toDateString()}\n                    </Typography>\n                    <Typography variant=\"body2\">\n                        Number of recoveries from Covid-19\n                    </Typography>\n                </CardContent>\n            </Grid>\n            <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\n                <CardContent>\n                    <Typography color=\"textSecondary\" gutterBottom>\n                        Deaths\n                    </Typography>\n                    <Typography variant=\"h5\"> \n                        <CountUp \n                        start={0}\n                        end={deaths.value}\n                        duration={2.5}\n                        separator=\",\"\n                        />\n                    </Typography>\n                    <Typography color=\"textSecondary\">\n                    {new Date(lastUpdate).toDateString()}\n                    </Typography>\n                    <Typography variant=\"body2\">\n                        Number of deaths from Covid-19\n                    </Typography>\n                </CardContent>\n            </Grid>\n          </Grid>\n      </div>\n    )\n}\n\nexport default Cards","import axios from 'axios';\n\nconst url = \"https://covid19.mathdro.id/api\";\n\nexport const fetchData = async(country) => {\n    let changeableUrl = url;\n    if(country) {\n        changeableUrl = `${url}/countries/${country}`;\n    }\n    try{\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\n\n\n        return { confirmed, recovered, deaths, lastUpdate };\n\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport const fetchDailyData = async () => {\n    try{\n        const { data } = await axios.get(`${url}/daily`);\n        \n        const modifiedData = data.map((dailyData) => ({\n            confirmed: dailyData.confirmed.total,\n            deaths: dailyData.deaths.total,\n            date: dailyData.reportDate,\n        }));\n        return modifiedData;\n    } catch (error) {\n\n    }\n}\n\nexport const fetchCountries = async () => {\n    try{\n        const { data: { countries }} = await axios.get(`${url}/countries`)\n        \n        return countries.map((country) => country.name)\n    } catch(error){\n        console.log(error)\n    }\n}","import React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\n\nimport styles from \"./Chart.module.css\";\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n    const [dailyData, setDailyData] = useState({});\n    \n    useEffect(() => {\n        const fetchAPI = async () => {\n            setDailyData(await fetchDailyData());\n        }\n\n      \n\n        fetchAPI();\n    }, []);\n\n    const lineChart = (\n        dailyData.length ? (\n        <Line \n            data= {{\n            labels:dailyData.map(({ date }) => date),\n            datasets:[{\n                data: dailyData.map(({ confirmed }) => confirmed),\n                label: 'Infected',\n                borderColor: '#3333ff',\n                fill: true,\n            }, {\n                data: dailyData.map(({ deaths }) => deaths),\n                label: 'Deaths',\n                borderColor: 'red',\n                backgroundColor: 'rgba(255, 0, 0, 0.5)',\n                fill: true,\n\n            }],\n        }} />\n        ) : null\n    );\n    \n   \n    const barChart = (\n        confirmed ? (\n        <Bar\n        data={{\n            labels: ['Infected', 'Recovered', 'Deaths'],\n            datasets: [{\n                label: 'People',\n                backgroundColor: [\n                    'rgba(0, 0, 255, 0.5)',\n                    'rgba(0, 255, 0, 0.5)',\n                    'rgba(255, 0, 0, 0.5)',\n                ],\n                data: [confirmed.value, recovered.value, deaths.value]\n            }]\n        }}\n        options={{\n            legend: {display: false },\n            title: { display: true, text: `Current State in ${country}`},\n        }}\n        />) : null\n    )\n    return(\n       <div className={styles.container}>\n           {country ? barChart : lineChart}\n\n       </div>\n    )\n}\n\nexport default Chart","import React, { useState, useEffect} from 'react';\nimport { NativeSelect, FormControl} from '@material-ui/core';\nimport styles from './CountryPicker.module.css'\n\nimport { fetchCountries } from '../../api';\n\nconst CountryPicker = ({ handleCountryChange}) => {\n    const [fetchedCountries, setFetchedCountries] = useState([])\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setFetchedCountries( await fetchCountries());\n        }\n\n        fetchAPI()\n    },[setFetchedCountries]);\n    \n    console.log(fetchedCountries)\n\n    return(\n       <FormControl className={styles.formControl}>\n           <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n               <option value=\"\">\n                   Global\n               </option>\n               {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\n           </NativeSelect>\n       </FormControl>\n    )\n}\n\nexport default CountryPicker","import React from 'react';\n\n\nimport { Cards, Chart, CountryPicker } from './Components'\nimport styles from './App.module.css'\nimport { fetchData } from './api';\nimport coronaImage from './images/image.png'\n\nclass App extends React.Component {\n    state = {\n        data:{},\n        country: ''\n    }\n\n    async componentDidMount (){\n        const fetchedData = await fetchData();\n\n        this.setState({ data:fetchedData })\n        \n    }\n\n    handleCountryChange = async (country) => {\n        const fetchedData = await fetchData(country);\n\n       this.setState({ data: fetchedData, country: country });\n\n        \n        //fetch the data\n\n        //set the state\n    }\n    render(){\n\n        const { data, country } = this.state;\n        return (\n            <div className={styles.container}>\n                    <img src={coronaImage} alt=\"covid-19\"/>\n                    <Cards data={data} />\n                    <CountryPicker handleCountryChange={this.handleCountryChange}/>\n                    <Chart data={data} country={country}/>\n                \n            </div>\n\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2bxln\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__4LMvE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}